// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using proyectoAlkemy.Contexts;

#nullable disable

namespace proyectoAlkemy.Migrations
{
    [DbContext(typeof(DisneyContext))]
    [Migration("20220213082303_Disney2")]
    partial class Disney2
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasDefaultSchema("disney")
                .HasAnnotation("ProductVersion", "6.0.2")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("proyectoAlkemy.Models.Characters", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"), 1L, 1);

                    b.Property<int>("Age")
                        .HasColumnType("int");

                    b.Property<string>("Image")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Lore")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(35)
                        .HasColumnType("nvarchar(35)");

                    b.Property<float>("Weight")
                        .HasColumnType("real");

                    b.HasKey("ID");

                    b.ToTable("Characters", "disney");
                });

            modelBuilder.Entity("proyectoAlkemy.Models.CharactersMS", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"), 1L, 1);

                    b.Property<int>("CharactersID")
                        .HasColumnType("int");

                    b.Property<int>("Movie_SerieID")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.HasIndex("CharactersID");

                    b.HasIndex("Movie_SerieID");

                    b.ToTable("CharactersMs", "disney");
                });

            modelBuilder.Entity("proyectoAlkemy.Models.Genres", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"), 1L, 1);

                    b.Property<string>("Asociated_Movie_Serie")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Image")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(35)
                        .HasColumnType("nvarchar(35)");

                    b.HasKey("ID");

                    b.ToTable("Genres", "disney");
                });

            modelBuilder.Entity("proyectoAlkemy.Models.MovieSerie", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"), 1L, 1);

                    b.Property<int>("GenresID")
                        .HasColumnType("int");

                    b.Property<string>("Image")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Ranking")
                        .HasColumnType("int");

                    b.Property<DateTime>("Release_Year")
                        .HasColumnType("datetime2");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("ID");

                    b.HasIndex("GenresID");

                    b.ToTable("MovieSeries", "disney");
                });

            modelBuilder.Entity("proyectoAlkemy.Models.CharactersMS", b =>
                {
                    b.HasOne("proyectoAlkemy.Models.Characters", "Character")
                        .WithMany("Characters_MovieSeries")
                        .HasForeignKey("CharactersID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("proyectoAlkemy.Models.MovieSerie", "MovieSerie")
                        .WithMany("Characters_MovieSeries")
                        .HasForeignKey("Movie_SerieID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Character");

                    b.Navigation("MovieSerie");
                });

            modelBuilder.Entity("proyectoAlkemy.Models.MovieSerie", b =>
                {
                    b.HasOne("proyectoAlkemy.Models.Genres", "Genres")
                        .WithMany("Movies")
                        .HasForeignKey("GenresID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Genres");
                });

            modelBuilder.Entity("proyectoAlkemy.Models.Characters", b =>
                {
                    b.Navigation("Characters_MovieSeries");
                });

            modelBuilder.Entity("proyectoAlkemy.Models.Genres", b =>
                {
                    b.Navigation("Movies");
                });

            modelBuilder.Entity("proyectoAlkemy.Models.MovieSerie", b =>
                {
                    b.Navigation("Characters_MovieSeries");
                });
#pragma warning restore 612, 618
        }
    }
}
