// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using proyectoAlkemy.Contexts;

#nullable disable

namespace proyectoAlkemy.Migrations
{
    [DbContext(typeof(DisneyContext))]
    [Migration("20220212221516_muchoAmuchos")]
    partial class muchoAmuchos
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasDefaultSchema("disney")
                .HasAnnotation("ProductVersion", "6.0.2")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("proyectoAlkemy.Models.Characters", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"), 1L, 1);

                    b.Property<int>("age")
                        .HasColumnType("int");

                    b.Property<string>("image")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("lore")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<float>("weight")
                        .HasColumnType("real");

                    b.HasKey("id");

                    b.ToTable("Characters", "disney");
                });

            modelBuilder.Entity("proyectoAlkemy.Models.CharactersMS", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"), 1L, 1);

                    b.Property<int>("charactersID")
                        .HasColumnType("int");

                    b.Property<int>("movie_serieID")
                        .HasColumnType("int");

                    b.HasKey("id");

                    b.HasIndex("charactersID");

                    b.HasIndex("movie_serieID");

                    b.ToTable("CharactersMs", "disney");
                });

            modelBuilder.Entity("proyectoAlkemy.Models.Genres", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"), 1L, 1);

                    b.Property<string>("asociated_movie_serie")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("image")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("id");

                    b.ToTable("Genres", "disney");
                });

            modelBuilder.Entity("proyectoAlkemy.Models.MovieSerie", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("Genresid")
                        .HasColumnType("int");

                    b.Property<string>("image")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ranking")
                        .HasColumnType("int");

                    b.Property<DateTime>("release_year")
                        .HasColumnType("datetime2");

                    b.Property<string>("title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("Genresid");

                    b.ToTable("MovieSeries", "disney");
                });

            modelBuilder.Entity("proyectoAlkemy.Models.CharactersMS", b =>
                {
                    b.HasOne("proyectoAlkemy.Models.Characters", "character")
                        .WithMany("Characters_MovieSeries")
                        .HasForeignKey("charactersID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("proyectoAlkemy.Models.MovieSerie", "movieSerie")
                        .WithMany("Characters_MovieSeries")
                        .HasForeignKey("movie_serieID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("character");

                    b.Navigation("movieSerie");
                });

            modelBuilder.Entity("proyectoAlkemy.Models.MovieSerie", b =>
                {
                    b.HasOne("proyectoAlkemy.Models.Genres", "Genres")
                        .WithMany("movies")
                        .HasForeignKey("Genresid")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Genres");
                });

            modelBuilder.Entity("proyectoAlkemy.Models.Characters", b =>
                {
                    b.Navigation("Characters_MovieSeries");
                });

            modelBuilder.Entity("proyectoAlkemy.Models.Genres", b =>
                {
                    b.Navigation("movies");
                });

            modelBuilder.Entity("proyectoAlkemy.Models.MovieSerie", b =>
                {
                    b.Navigation("Characters_MovieSeries");
                });
#pragma warning restore 612, 618
        }
    }
}
